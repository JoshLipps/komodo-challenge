networks:
  internal-network:
    name: internal-network
services:
  # ui:
  api:
    build: ./api
    restart: always
    ports:
      - "80:3000"
    depends_on:
      - mongo
    environment:
      PORT: ${PORT:-3000},
      DB_CONN_STRING: ${DB_CONN_STRING:-mongodb://root:example@mongo:27017/},
      DB_NAME: ${DB_NAME:-challange},
      RECIPE_COLLECTION_NAME: ${RECIPE_COLLECTION_NAME:-recipe},
      CURATION_COLLECTION_NAME: ${CURATION_COLLECTION_NAME:-curation},
    networks:
      - internal-network
  # db:
  #   image: postgres
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=postgres
  #   networks:
  #     - internal-network
  mongo:
    container_name: mongo
    image: mongo
    restart: always
    # environment:
      # MONGO_INITDB_ROOT_USERNAME: root
      # MONGO_INITDB_ROOT_PASSWORD: example
      # MONGO_INITDB_DATABASE: ${DB_NAME:-challange}
    # for local development
    # ports:
    #   - "27017:27017"

    # volumes:
    #  - ./db:/docker-entrypoint-initdb.d/:ro
    #  - ./data:/data/db
    networks:
     - internal-network
  mongo-admin:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      # ME_CONFIG_MONGODB_ADMINUSERNAME: root
      # ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: ${DB_CONN_STRING:-mongodb://root:example@mongo:27017/}
    networks:
     - internal-network